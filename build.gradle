plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'pl.allegro.tech.build.axion-release' version '1.15.5'
    id "com.gorylenko.gradle-git-properties" version "2.4.1"

}
project.version = scmVersion.version

group = 'com.example'

java {
    sourceCompatibility = '21'
}
jar {
    enabled = false
}
ext {
    logbookVersion = '3.6.0'
    set('testcontainersVersion', "1.18.0")

}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.postgresql:postgresql'

    implementation 'org.liquibase:liquibase-core'

    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'


    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'


    implementation 'org.zalando:logbook-spring-boot-starter:3.6.0'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}
test {
    testLogging {
        events "passed", "skipped", "failed"
    }
}
